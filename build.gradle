buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: "${forgegradle_version}", changing: true
	}
}

plugins {
	id 'eclipse'
	id 'maven-publish'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
archivesBaseName = "${mod_name}-Forge"

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
	mappings channel: 'official', version: "${minecraft_version}"

	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', "${mod_id}"

			mods {
				mainproject {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', "${mod_id}"

			mods {
				mainproject {
					source sourceSets.main
				}
			}
		}

		gameTestServer {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', "${mod_id}"

			mods {
				mainproject {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			args '--mod', "${mod_id}", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				mainproject {
					source sourceSets.main
				}
			}
		}
	}
}

sourceSets.main.resources {
	srcDir 'src/generated/resources'
	exclude '.cache'
	exclude '*.DS_Store*'
}

sourceSets.main.java {
	exclude "paragon/minecraft/${packagename}/generators".toString()
	exclude '*.DS_Store*'
}

repositories {

}

dependencies {
	minecraft "net.minecraftforge:forge:${forge_version}".toString()
}

jar {
	manifest {
		attributes([
			"Specification-Title": "${mod_id}",
			"Specification-Vendor": "${mod_vendor}",
			"Specification-Version": "1",
			"Implementation-Title": project.name,
			"Implementation-Version": "${version}",
			"Implementation-Vendor" : "${mod_vendor}",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

jar.finalizedBy('reobfJar')

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact jar
		}
	}
	repositories {
		maven {
			url "file://${project.projectDir}/mcmodsrepo"
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}
